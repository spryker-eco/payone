name: CI

on:
    pull_request:
    push:
        branches:
            - master
    workflow_dispatch:

env:
    SPRYKER_TESTING_ENABLED: 1
    APPLICATION_STORE: DE
    POSTGRES_PORT: 5433
    POSTGRES_USER: postgres
    POSTGRES_DB: DE_test_zed
    DB_PASSWORD: pwd
#    DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
    MYSQL_USER: root
    MYSQL_DATABASE: DE_test_zed
    MODULE_DIR: module
    SHOP_DIR: current
    MODULE_NAME: payone
    APPLICATION_ENV: ci.pgsql

jobs:
    validation:
        name: "Validation"
        runs-on: ubuntu-18.04
        strategy:
            fail-fast: false
            matrix:
                php: ['7.3', '8.0']
        env:
            APPLICATION_ENV: devtest
        steps:
            - uses: actions/checkout@v2

            - name: Configure sysctl limits
              run: |
                  sudo swapoff -a
                  sudo sysctl -w vm.swappiness=1
                  sudo sysctl -w fs.file-max=262144
                  sudo sysctl -w vm.max_map_count=262144
            - name: Composer get cache directory
              id: composer-cache
              run: |
                  echo "::set-output name=dir::$(composer config cache-files-dir)"
            - name: Composer cache
              uses: actions/cache@v2
              with:
                  path: ${{ steps.composer-cache.outputs.dir }}
                  key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-composer-
            - name: Composer validate
              run: composer validate

            - name: Composer install
              run: |
                  composer --version
                  composer install
            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: ${{ matrix.php }}
                  extensions: mbstring, intl
                  tools: composer:v2

            - name: Run CodeStyle checks
              run: composer cs-check

            - name: PHPStan setup
              run: composer stan-setup

            - name: Run PHPStan
              run: composer stan
    test_pgsql:
        name: "Test / PostgreSQL"
        runs-on: ubuntu-18.04
        strategy:
            fail-fast: false
            matrix:
                php: [ '7.3', ]
                product: [ 'b2b-demo-shop', 'b2c-demo-shop', 'suite' ]
        services:
            rabbitmq:
                image: rabbitmq
                ports:
                    - 5672:5672
            redis:
                image: redis
                ports:
                    - 6379:6379
            postgres:
                image: postgres:12
                env:
                    POSTGRES_PASSWORD: ${{ env.DB_PASSWORD }}
                    POSTGRES_USER: ${{ env.POSTGRES_USER }}
                    POSTGRES_DB: ${{ env.POSTGRES_DB }}
                ports:
                    - 5433:5432
                options: >-
                    --health-cmd pg_isready
                    --health-interval 10s
                    --health-timeout 5s
                    --health-retries 5
        env:
            PRODUCT_NAME: ${{ matrix.product }}
        steps:
            -   uses: actions/checkout@v2

            -   name: Setup PHP
                uses: shivammathur/setup-php@v2
                with:
                    php-version: ${{ matrix.php }}
                    extensions: mbstring, intl
                    tools: composer:v2

            -   name: 'Run Elasticsearch'
                uses: elastic/elastic-github-actions/elasticsearch@master
                with:
                    stack-version: 6.8.0

            -   name: Install eco-ci
                run: git clone -b bugfix/te-8522-fix-up-missing-ga-moves https://github.com/spryker-eco/eco-ci.git ecoci #Todo: use proper branch

            -   name: Execute test script
                run: ./ecoci/build/ga.sh
